import simplejson as json
import pandas as pd


def product_row_to_db_record(row, **kwargs):
    return (
        row['ProductId'],
        json.dumps({
            'ban': row['Ban'],
            'sku': row['SKU'],
            'upc': row['UPC'],
            'name': row['ProductName'],
            'short_name': row['ShortName'],
            'client_code': row['ClientCode'],
            'manufacturer': row['Manufacturer'],
            'brand_name': row['BrandName'],
            'sub_brand_name': row['SubBrandName'],
            'product_uid': row['ProductUID'],
            'product_distribution_identifier': row['ProductDistributionIdentifier'],
            'label_name': row['LabelName'],
            'country_code': row['CountryCode'],
            'cc_id': row['CCId'],
            'pim_id': row['PIMId'],
            'bar_code': row['Barcode'],
            'article_code': row['ArticleCode'],
            'third_party_product': row['ThirdPartyProduct'],
            'thumbnail_url': row['ThumbnailUrl'],
        }),
        json.dumps({
            'packaging_type': row['PackagingType'],
            'package_type': row['PackageType'],
            'measurement_unit': row['MeasurementUnit'],
            'selling_pack_type': row['SellingPackType'],
            'selling_pack_size': row['SellingPackSize'],
            'normalize_packaging_size': row['NormalizePackagingSize'],
            'selling_pack_front_facings': row['SellingPackFrontFacings'],
            'selling_pack_side_facings': row['SellingPackSideFacings'],
            'package_size': row['PackageSize'],
            'sales_unit': row['SalesUnit'],
        }),
        json.dumps({
            'category': row['ProductCategory'],
            'category_code': row['ProductCategoryCode'],
            'beverage_type': row['BeverageType'],
            'flavour_name': row['FlavourName'],
            'local_category_name': row['LocalProductCategoryName'],
            'local_sub_category_name': row['ProductLocalSubCategoryName'],
            'local_sub_category_code': row['ProductLocalSubCategoryCode'],
            'group': row['ProductGroup'],
            'price': row['Price'],
            'currency_name': row['CurrencyName'],
            'type': row['Type'],
            'sweetener_type': row['SweetnerType'],
            'serving_type': row['ServingType'],
        }),
        json.dumps({
            'is_foreign': row['IsForeign'],
            'is_unknown': row['IsUnknown'],
            'is_trained': row['IsTrained'],
            'is_flagged': row['IsFlagged'],
            'is_competitor': row['IsCompetitor'],
            're_sku_code': row['RESkuCode'],
            'is_active': row['IsActive'],
            'sku_last_seen': row['SKULastSeen'] if not pd.isnull(row['SKULastSeen']) else None,
            're_id': row['REId'],
        }),
        row['CreatedByUserId'],
        row['CreatedOn'],
        row['ModifiedByUserId'],
        row['ModifiedOn'],
    )
