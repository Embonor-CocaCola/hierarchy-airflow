ingress:
  web:
    hosts:
      - airflow2.staging.embonorservices.cl
    #Values for ALB Ingress
    # annotations:
    #   alb.ingress.kubernetes.io/backend-protocol: 'HTTP'
    #   alb.ingress.kubernetes.io/subnets: subnet-0bd4de4c158f09c45, subnet-0aa90f514f4669b74, subnet-01a943936c1753713
    #   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
    #   alb.ingress.kubernetes.io/load-balancer-attributes: "routing.http2.enabled=true, idle_timeout.timeout_seconds=360"
    #   alb.ingress.kubernetes.io/scheme: internet-facing
    #   alb.ingress.kubernetes.io/target-type: ip
    #   kubernetes.io/ingress.class: alb-ingress
    #   alb.ingress.kubernetes.io/group.name: alb-ingress-staging-embonorservices-cl
    #   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:429421768787:certificate/98a67cc1-fd8c-4680-b794-29be1e4ef2ce
    # path: /*

env:
  - name: STAGE
    value: staging
  - name: ML_MAXERIENCE_BASE_URL
    value: https://portal-stg1.maxerience.com/IrHandler
  - name: MRR_MAXERIENCE_REST_BASE_URL
    value: https://irclientdataexportpp.blob.core.windows.net/
  - name: SLACK_ETL_SUCCESS_CHANNEL
    value: C032Y1XQAJ1
  - name: SURVEYS_SERVICE_BASE_URL
    value: https://api.staging.embonorservices.cl/surveys-service
  - name: AIRFLOW__SECRETS__BACKEND_KWARGS
    value: |2
      {"connections_prefix": "/stg/airflow_service/connections", "variables_prefix": "/stg/airflow_service/variables"}
secret:
  - envName: "EXPOS_SQL_CONN_URI"
    secretName: "airflow-envars"
    secretKey: "EXPOS_SQL_CONN_URI"
  - envName: "EMBONOR_SERVICES_BASE_URL"
    secretName: "airflow-envars"
    secretKey: "EMBONOR_SERVICES_BASE_URL"
  - envName: "EMBONOR_PG_CONN_URI"
    secretName: "airflow-envars"
    secretKey: "EMBONOR_PG_CONN_URI"
  - envName: "EMBONOR_MONGO_CONN_URI"
    secretName: "airflow-envars"
    secretKey: "EMBONOR_MONGO_CONN_URI"
  - envName: "PRE_AUTHENTICATED_REQUESTS_URL"
    secretName: "airflow-envars"
    secretKey: "PRE_AUTHENTICATED_REQUESTS_URL"
  - envName: "AUTH_USER"
    secretName: "airflow-envars"
    secretKey: "AUTH_USER"
  - envName: "AUTH_PASS"
    secretName: "airflow-envars"
    secretKey: "AUTH_PASS"
  - envName: "OCI_USER"
    secretName: "airflow-envars"
    secretKey: "OCI_USER"
  - envName: "OCI_KEY"
    secretName: "airflow-envars"
    secretKey: "OCI_KEY"
  - envName: "OCI_FINGERPRINT"
    secretName: "airflow-envars"
    secretKey: "OCI_FINGERPRINT"
  - envName: "OCI_TENANCY"
    secretName: "airflow-envars"
    secretKey: "OCI_TENANCY"
  - envName: "OCI_REGION"
    secretName: "airflow-envars"
    secretKey: "OCI_REGION"
  - envName: "SLACK_SUCCESS_CHANNEL_URL"
    secretName: "airflow-envars"
    secretKey: "SLACK_SUCCESS_CHANNEL_URL"
  - envName: "SLACK_FAILURE_CHANNEL_URL"
    secretName: "airflow-envars"
    secretKey: "SLACK_FAILURE_CHANNEL_URL"
  - envName: "MRR_SAS_KEY"
    secretName: "airflow-envars"
    secretKey: "MRR_SAS_KEY"
  - envName: "SLACK_EXPOS_BOT_TOKEN"
    secretName: "airflow-envars"
    secretKey: "SLACK_EXPOS_BOT_TOKEN"
  - envName: "SPCL_S3_CONN_URI"
    secretName: "airflow-envars"
    secretKey: "SPCL_S3_CONN_URI"

tolerations:
  - key: "purpose"
    operator: "Equal"
    value: "airflow"
    effect: "NoSchedule"
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: purpose
          operator: In
          values:
          - airflow
